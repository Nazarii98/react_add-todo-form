{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","titleError","setTitleError","userError","setUserError","addUser","setAddUser","addTitle","setAddTitle","addTodos","setAddTodos","action","method","type","placeholder","value","onChange","event","target","disabled","onClick","preventDefault","trim","newIndex","Math","max","newTodo","handleAddTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.517ede40.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [titleError, setTitleError] = useState<boolean>(false);\n  const [userError, setUserError] = useState<boolean>(false);\n  const [addUser, setAddUser] = useState<string>('');\n  const [addTitle, setAddTitle] = useState<string>('');\n  const [addTodos, setAddTodos] = useState<Todo[]>(todos);\n\n  const handleAddTodo = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n\n    const title = addTitle.trim();\n    const newIndex = Math.max(...addTodos.map(todo => todo.id)) + 1;\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    !title\n      ? setTitleError(true)\n      : setTitleError(false);\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    !addUser\n      ? setUserError(true)\n      : setUserError(false);\n\n    if (title && addUser) {\n      const newTodo: Todo = {\n        id: newIndex,\n        title,\n        completed: false,\n        userId: 1,\n        user: getUser(+addUser),\n      };\n\n      setAddTodos([\n        ...addTodos,\n        newTodo,\n      ]);\n\n      setAddTitle('');\n      setAddUser('');\n    }\n  };\n\n  const handleSetAddUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setAddUser(event.target.value);\n    setUserError(false);\n  };\n\n  const handleSetAddTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAddTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <span className=\"label\">Title: </span>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={addTitle}\n            onChange={handleSetAddTitle}\n          />\n          <span className=\"error\">\n            {titleError && ('Please enter a title')}\n          </span>\n        </div>\n\n        <div className=\"field\">\n          <span className=\"label\">User: </span>\n          <select\n            name=\"User\"\n            data-cy=\"userSelect\"\n            value={addUser}\n            onChange={handleSetAddUser}\n          >\n            <option disabled value=\"\">Choose a user</option>\n            {\n              usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {`${user.name}`}\n                </option>\n              ))\n            }\n          </select>\n\n          <span className=\"error\">\n            {userError && ('Please choose a user')}\n          </span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={(event) => handleAddTodo(event)}\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <div className=\"App\">\n          <TodoList todos={addTodos} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}